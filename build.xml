<project name="MapFeaturesConverter" default="test" basedir="." xmlns:ac="antlib:net.sf.antcontrib">
    <description>
        map_features converter for l10n
    </description>

  <!-- load properties from the environment -->
  <property environment="env" />

  <!-- load previously defined configuration properties file -->
  <property file="build.properties" />

  <!-- ant-contrib to build multiple locales -->
  <taskdef uri="antlib:net.sf.antcontrib" resource="net/sf/antcontrib/antlib.xml" classpath="${basedir}/lib/ant-contrib-1.0b3.jar"/>

  <target name="init">
    <tstamp/>
    <mkdir dir="${build.dir}"/>
  </target>

  <target name="compile" depends="init">
    <javac srcdir="${src.dir}" destdir="${build.dir}" includeAntRuntime="true"/>
  </target>

  <target name="dist" depends="compile" >
    <mkdir dir="${dist.dir}"/>
    <jar jarfile="${dist.dir}/MapFeaturesConverter.jar" basedir="${build.dir}">
     <manifest>
      <attribute name="Main-Class" value="${main.class}"/>
      <attribute name="Class-Path" value="${runtime.classpath}"/>
      <attribute name="Implementation-Title"   value="${Name}"/>
      <attribute name="Implementation-Version" value="${version}"/>
      <attribute name="Implementation-Vendor"  value="${vendor}"/>
      <attribute name="Build-Id"
                value="${ts} (${user.name} [${os.name} ${os.version} ${os.arch}])"/>
     </manifest>
    </jar>
  </target>

<!-- =====================
         Test macros
     ===================== -->
  <macrodef name="localizeFeatures">
    <attribute name="source"/>
    <attribute name="dest"/>
    <attribute name="properties"/>
    <attribute name="missing"/>
    <sequential>
      <java classname="${main.class}" dir="${basedir}"
          fork="yes" classpath="${dist.dir}/MapFeaturesConverter.jar">
        <arg value="@{source}"/>
        <arg value="@{dest}"/>
        <arg value="@{properties}"/>
        <arg value="@{missing}"/>
      </java>
    </sequential>
  </macrodef>

  <macrodef name="buildL10NFeatures" description="make gen/(lang)/map_features/(feature).xml">
    <attribute name="locale" default="en_GB"/>
    <sequential>
      <delete file="${dataout.dir}/@{locale}/missing.properties"/>
      <ac:var name="present" unset="true"/>
      <available file="${data.dir}/@{locale}/map_features.properties" property="present"/>
      <fail unless="present" message="There is not a map_features.properties for @{locale}"/>

      <mkdir dir="${dataout.dir}/@{locale}/map_features"/>
      <localizeFeatures source="${data.dir}/map_features.xml"
                dest="${dataout.dir}/@{locale}/map_features.xml"
                properties="${data.dir}/@{locale}/map_features.properties"
                missing="${dataout.dir}/@{locale}/missing.properties"/>

      <ac:for list="${featureGroups.list}" keepgoing="true" param="featuregroupname">
        <sequential>
          <localizeFeatures source="${data.dir}/map_features/@{featuregroupname}.xml"
                dest="${dataout.dir}/@{locale}/map_features/@{featuregroupname}.xml"
                properties="${data.dir}/@{locale}/map_features.properties"
                missing="${dataout.dir}/@{locale}/missing.properties"/>
          </sequential>
      </ac:for>
    </sequential>
  </macrodef>

  <macrodef name="deployLocale" description="Deploying the compiled zip file">
    <attribute name="locale" default="en_GB"/>
    <sequential>
      <zip destfile="${dataout.dir}/@{locale}.zip" basedir="${dataout.dir}/@{locale}"
           excludesfile="${dataout.dir}/@{locale}/missing.properties"/>
    </sequential>
  </macrodef>

<!-- =====================
         Test section
     ===================== -->

  <property name="locales.list" value="en_US,ja_JP"/>

  <target name="test" depends="dist">
    <ac:for list="${locales.list}" keepgoing="true" param="localename">
      <sequential>
        <echo>build @{localename} assets</echo>
        <buildL10NFeatures locale="@{localename}"/>
        <deployLocale locale="@{localename}"/>
      </sequential>
    </ac:for>
  </target>

<!-- =====================
         Clean up
     ===================== -->

  <target name="clean">
    <delete dir="${build.dir}"/>
    <delete dir="${dist.dir}"/>
    <delete dir="${dataout.dir}"/>
    <delete>
      <fileset dir="${src.dir}" includes="**/*.class"/>
      <fileset dir="${basedir}" includes="**/*.bak" defaultexcludes="no"/>
      <fileset dir="${basedir}" includes="**/*~" defaultexcludes="no"/>
    </delete>
  </target>
</project>
